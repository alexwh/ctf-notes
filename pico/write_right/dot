digraph code {
	graph [bgcolor=white];
	node [color=lightgray, style=filled shape=box fontname="Courier" fontsize="8"];
	"0x080485cd_0x080485cd" -> "0x080485cd_0x080486e3" [color="green"];
	"0x080485cd_0x080485cd" -> "0x080485cd_0x08048673" [color="red"];
 "0x080485cd_0x080485cd" [color="red", label="/ (fcn) sym.main 310\l| ; arg int arg_3        @ ebp+0xc\l| ;-- main:\l| ;-- sym.main:\l| 0x080485cd   push ebp\l| 0x080485ce   mov ebp, esp\l| 0x080485d0   and esp, 0xfffffff0\l| 0x080485d3   sub esp, 0x50\l| 0x080485d6   mov eax, dword [ebp + 0xc]                               ; [0xc:4]=0\l| 0x080485d9   mov dword [esp + 0xc], eax                               ; [0xc:4]=0\l| 0x080485dd   mov eax, dword gs:[0x14]                                 ; [0x14:4]=1\l| 0x080485e3   mov dword [esp + 0x4c], eax                              ; [0x4c:4]=5 ; 'L'\l| 0x080485e7   xor eax, eax\l| 0x080485e9   mov dword [esp], str.Welcome__I_will_grant_you_one_arbitrary_write_  ; [0x80487a0:4]=0x636c6557  ; \"Welcome! I will grant you one arbitrary write!\" @ 0x80487a0\l| 0x080485f0   call sym.imp.puts ;0x08048470() ; sym.imp.puts\l| 0x080485f5   mov dword [esp], str.Where_do_you_want_to_write_to_      ; [0x80487d0:4]=0x72656857  ; \"Where do you want to write to? \" @ 0x80487d0\l| 0x080485fc   call sym.imp.printf ;0x08048430() ; sym.imp.printf\l| 0x08048601   lea eax, dword [esp + 0x1c]                              ; 0x1c \l| 0x08048605   mov dword [esp + 4], eax                                 ; [0x4:4]=0x10101 \l| 0x08048609   mov dword [esp], 0x80487f0                               ; [0x80487f0:4]=0x7025 \l| 0x08048610   call sym.imp.__isoc99_scanf ;0x080484c0() ; sym.imp.__isoc99_scanf\l| 0x08048615   mov dword [esp], str.Okay__What_do_you_want_to_write_there_  ; [0x80487f4:4]=0x79616b4f  ; \"Okay! What do you want to write there? \" @ 0x80487f4\l| 0x0804861c   call sym.imp.printf ;0x08048430() ; sym.imp.printf\l| 0x08048621   lea eax, dword [esp + 0x20]                              ; 0x20 \l| 0x08048625   mov dword [esp + 4], eax                                 ; [0x4:4]=0x10101 \l| 0x08048629   mov dword [esp], 0x80487f0                               ; [0x80487f0:4]=0x7025 \l| 0x08048630   call sym.imp.__isoc99_scanf ;0x080484c0() ; sym.imp.__isoc99_scanf\l| 0x08048635   mov edx, dword [esp + 0x1c]                              ; [0x1c:4]=52\l| 0x08048639   mov eax, dword [esp + 0x20]                              ; [0x20:4]=0x1194 \l| 0x0804863d   mov dword [esp + 8], edx                                 ; [0x8:4]=0\l| 0x08048641   mov dword [esp + 4], eax                                 ; [0x4:4]=0x10101 \l| 0x08048645   mov dword [esp], str.Writing__p_to__p..._n               ; [0x804881c:4]=0x74697257  ; \"Writing %p to %p....\" @ 0x804881c\l| 0x0804864c   call sym.imp.printf ;0x08048430() ; sym.imp.printf\l| 0x08048651   mov eax, dword [esp + 0x1c]                              ; [0x1c:4]=52\l| 0x08048655   mov edx, dword [esp + 0x20]                              ; [0x20:4]=0x1194 \l| 0x08048659   mov dword [eax], edx\l| 0x0804865b   mov dword [esp], str.Value_written_                      ; [0x8048831:4]=0x756c6156  ; \"Value written!\" @ 0x8048831\l| 0x08048662   call sym.imp.puts ;0x08048470() ; sym.imp.puts\l| 0x08048667   mov eax, dword [sym.secret]                              ; [0x804a03c:4]=0xdeadbeef  ; sym.secret\l| 0x0804866c   cmp eax, 0x1337beef\l| 0x08048671   jne 0x80486e3                                          \l", URL="sym.main/0x080485cd"]
	"0x080485cd_0x080486e3" -> "0x080485cd_0x08048701" [color="green"];
	"0x080485cd_0x080486e3" -> "0x080485cd_0x080486fc" [color="red"];
 "0x080485cd_0x080486e3" [color="red", label="  ; JMP XREF from 0x08048671 (sym.main)\l| 0x080486e3   mov dword [esp], str.My_secret_is_still_safe__Sorry.     ; [0x8048894:4]=0x7320794d  ; \"My secret is still safe! Sorry.\" @ 0x8048894\l| 0x080486ea   call sym.imp.puts ;0x08048470() ; sym.imp.puts\l| 0x080486ef   mov ecx, dword [esp + 0x4c]                              ; [0x4c:4]=5 ; 'L'\l| 0x080486f3   xor ecx, dword gs:[0x14]\l| 0x080486fa   je 0x8048701                                           \l", URL="sym.main/0x080486e3"]
 "0x080485cd_0x08048701" [color="red", label="  ; JMP XREF from 0x080486fa (sym.main)\l| 0x08048701   leave\l\\ 0x08048702   ret\l", URL="sym.main/0x08048701"]
	"0x080485cd_0x080486fc" -> "0x080485cd_0x08048701" [color="blue"];
 "0x080485cd_0x080486fc" [color="red", label="| 0x080486fc   call sym.imp.__stack_chk_fail ;0x08048460() ; sym.imp.__stack_chk_fail\l", URL="sym.main/0x080486fc"]
	"0x080485cd_0x08048673" -> "0x080485cd_0x080486e3" [color="blue"];
 "0x080485cd_0x08048673" [color="red", label="| 0x08048673   mov dword [esp], str.Woah__You_changed_my_secret_        ; [0x8048840:4]=0x68616f57  ; \"Woah! You changed my secret!\" @ 0x8048840\l| 0x0804867a   call sym.imp.puts ;0x08048470() ; sym.imp.puts\l| 0x0804867f   mov dword [esp], str.I_guess_this_means_you_get_a_flag_now...  ; [0x8048860:4]=0x75672049  ; \"I guess this means you get a flag now...\" @ 0x8048860\l| 0x08048686   call sym.imp.puts ;0x08048470() ; sym.imp.puts\l| 0x0804868b   mov dword [esp + 4], 0x8048889                           ; [0x8048889:4]=0x6c660072  ; \"r\" @ 0x8048889\l| 0x08048693   mov dword [esp], str.flag.txt                            ; [0x804888b:4]=0x67616c66  ; \"flag.txt\" @ 0x804888b\l| 0x0804869a   call sym.imp.fopen ;0x080484b0() ; sym.imp.fopen\l| 0x0804869f   mov dword [esp + 0x24], eax                              ; [0x24:4]=0 ; '$'\l| 0x080486a3   mov eax, dword [esp + 0x24]                              ; [0x24:4]=0 ; '$'\l| 0x080486a7   mov dword [esp + 8], eax                                 ; [0x8:4]=0\l| 0x080486ab   mov dword [esp + 4], 0x20                                ; [0x20:4]=0x1194 \l| 0x080486b3   lea eax, dword [esp + 0x2b]                              ; 0x2b  ; '+'\l| 0x080486b7   mov dword [esp], eax\l| 0x080486ba   call sym.imp.fgets ;0x08048440() ; sym.imp.fgets\l| 0x080486bf   mov eax, dword [esp + 0x24]                              ; [0x24:4]=0 ; '$'\l| 0x080486c3   mov dword [esp], eax\l| 0x080486c6   call sym.imp.fclose ;0x08048450() ; sym.imp.fclose\l| 0x080486cb   lea eax, dword [esp + 0x2b]                              ; 0x2b  ; '+'\l| 0x080486cf   mov dword [esp], eax\l| 0x080486d2   call sym.imp.puts ;0x08048470() ; sym.imp.puts\l| 0x080486d7   mov dword [esp], 0\l| 0x080486de   call sym.imp.exit ;0x08048490() ; sym.imp.exit\l", URL="sym.main/0x08048673"]
}
